name: Build Qt6 App for Linux

on:
  push:
    branches:
      - master
    tags:
      - "*"
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      QT_VERSION: 6.6.0
      APP_NAME: subtivals
      BUILD_TYPE: Release

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y \
            qt6-base-dev qt6-base-private-dev \
            qt6-tools-dev qt6-tools-dev-tools \
            qt6-declarative-dev \
            libgl1-mesa-dev \
            build-essential cmake \
            patchelf dpkg fakeroot \
            squashfs-tools xz-utils \
            linuxdeploy \
            software-properties-common \
            wget curl

      - name: Install static Qt (if needed)
        run: |
          mkdir -p $HOME/Qt
          wget -q https://download.qt.io/official_releases/qt/${QT_VERSION%.*}/${QT_VERSION}/qt-opensource-linux-x64-${QT_VERSION}.run
          chmod +x qt-opensource-linux-x64-${QT_VERSION}.run
          ./qt-opensource-linux-x64-${QT_VERSION}.run --script qt-noninteractive.qs
          echo "$HOME/Qt/${QT_VERSION}/gcc_64/bin" >> $GITHUB_PATH

      - name: Configure and build
        run: |
          mkdir -p build
          cd build
          qmake ../src/$APP_NAME.pro CONFIG+=release CONFIG+=static
          make -j$(nproc)

      - name: Package as Debian (.deb)
        run: |
          mkdir -p package/DEBIAN
          mkdir -p package/usr/local/bin
          cp build/$APP_NAME package/usr/local/bin/

          cat <<EOF > package/DEBIAN/control
          Package: $APP_NAME
          Version: 1.0.0
          Architecture: amd64
          Maintainer: Mathieu Leplatre <contact@subtivals.org>
          Description: A program to project subtitles.
          EOF

          dpkg-deb --build package $APP_NAME.deb

      - name: Package as AppImage
        run: |
          APPDIR=AppDir
          mkdir -p $APPDIR/usr/bin
          mkdir -p $APPDIR/usr/share/applications
          cp build/$APP_NAME $APPDIR/usr/bin/

          cat <<EOF > $APPDIR/usr/share/applications/$APP_NAME.desktop
          [Desktop Entry]
          Name=$APP_NAME
          Exec=$APP_NAME
          Icon=$APP_NAME
          Type=Application
          Categories=Utility;
          EOF

          linuxdeploy --appdir $APPDIR --output appimage

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.APP_NAME }}-artifacts
          path: |
            build/${{ env.APP_NAME }}
            ${{ env.APP_NAME }}.deb
            *.AppImage

  release:
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - name: Download built artifacts
        uses: actions/download-artifact@v4
        with:
          name: myapp-artifacts
          path: release/

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: release/*
